# Jekyllサイトを構築してGitHub Pagesにデプロイするワークフローの例
name: pages build and deployment (custom)

on:
  # デフォルトブランチを対象としたプッシュで実行する
  push:
    paths:
      - 'dist/**'
    branches: ["main"]

  # Actions タブから、このワークフローを手動で実行できるようにします。
  workflow_dispatch:

# GITHUB_TOKEN のパーミッションを設定し、GitHub Pages へのデプロイを許可する。
permissions:
  contents: read
  pages: write
  id-token: write

# 進行中の実行と最新のキューに入れられた実行の間にキューに入れられた実行をスキップして、同時実行を1つだけ許可する。
# ただし、本番環境でのデプロイメントを完了させたいので、進行中の実行をキャンセルしないでください。
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./dist
          destination: ./dist/_site
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
